{
    "swagger": "2.0",
    "info": {
        "description": "the purpose of this application is to create REST connector to the Ryft One hardware",
        "title": "Ryft REST.",
        "version": "1.0"
    },
    "host": "52.3.59.171:8765",
    "paths": {
        "/count": {
            "get": {
                "description": "Endpoint for the count",
                "tags": [
                    "count"
                ],
                "summary": "Count",
                "operationId": "count",
                "parameters": [
                    {
                        "type": "string",
                        "x-go-name": "Query",
                        "description": "Search query, for example: ( RAW_TEXT CONTAINS \"night\" )",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Files",
                        "description": "Source files",
                        "name": "files",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "uint8",
                        "x-go-name": "Fuzziness",
                        "description": "Is the fuzziness of the search. Measured as the maximum Hamming distance.",
                        "name": "fuzziness",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "x-go-name": "CaseSensitive",
                        "description": "Case sensitive flag",
                        "name": "cs",
                        "in": "query"
                    },
                    {
                        "maximum": 4,
                        "minimum": 0,
                        "type": "integer",
                        "format": "uint8",
                        "x-go-name": "Nodes",
                        "description": "Active Nodes Count",
                        "name": "nodes",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "x-go-name": "Local",
                        "description": "Perform search only on this cluster member. Default 'false'.",
                        "name": "local",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SearchResponseOK is a search result in an array with an elaments of various structure",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CountResponse"
                        }
                    },
                    "default": {
                        "description": "Error responses",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Endpoint for the search",
                "tags": [
                    "search"
                ],
                "operationId": "search",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Files",
                        "description": "Source files",
                        "name": "files",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "x-go-name": "Format",
                        "description": "Source format parser name",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "x-go-name": "CaseSensitive",
                        "description": "Case sensitive flag",
                        "name": "cs",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "x-go-name": "Fields",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Keys",
                        "name": "keys",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "x-go-name": "Query",
                        "description": "Search query, for example: ( RAW_TEXT CONTAINS \"night\" )",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 6554,
                        "minimum": 0,
                        "type": "integer",
                        "format": "uint16",
                        "x-go-name": "Surrounding",
                        "description": "Specifies the number of characters before the match and after the match that will be returned when the input specifier type is raw text",
                        "name": "surrounding",
                        "in": "query"
                    },
                    {
                        "maximum": 255,
                        "minimum": 0,
                        "type": "integer",
                        "format": "uint8",
                        "x-go-name": "Fuzziness",
                        "description": "Is the fuzziness of the search. Measured as the maximum Hamming distance.",
                        "name": "fuzziness",
                        "in": "query"
                    },
                    {
                        "maximum": 4,
                        "minimum": 0,
                        "type": "integer",
                        "format": "uint8",
                        "x-go-name": "Nodes",
                        "description": "Active Nodes Count",
                        "name": "nodes",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "x-go-name": "Local",
                        "description": "Perform search only on this cluster member. Default 'false'.",
                        "name": "local",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "x-go-name": "Stats",
                        "description": "Include search stats in response. Default 'false'.",
                        "name": "stats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SearchResponseOK is a search result in an array with an elaments of various structure",
                        "schema": {
                            "description": "CountResponse returnes matches for query",
                            "type": "object",
                            "$ref": "#/definitions/SearchResponse"
                        }
                    },
                    "default": {
                        "description": "Error responses",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "tags": [
                    "files"
                ],
                "summary": "Files",
                "description": "Endpoint to query mode/cluster file system structure",
                "operationId": "files",
                "parameters": [
                    {
                        "name": "dir",
                        "type": "string",
                        "description": "The folder path to return child items of. Default '/'",
                        "in": "query"
                    },
                    {
                        "name": "local",
                        "type": "boolean",
                        "description": "Return file structure from local node only or whole cluster",
                        "required": false,
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of files and directories for node/cluster",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/FilesResponse"
                        }
                    },
                    "default": {
                        "description": "Error responses",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CountResponse": {
            "type": "object",
            "required": [
                "matches"
            ],
            "properties": {
                "dataRate": {
                    "type": "string"
                },
                "duration": {
                    "type": "number",
                    "format": "int32"
                },
                "fabricDataRate": {
                    "type": "string"
                },
                "matches": {
                    "type": "number",
                    "format": "int32"
                },
                "totalBytes": {
                    "type": "number",
                    "format": "int32"
                }
            }
        },
        "SearchResponse": {
            "type": "object",
            "required": [
                "results"
            ],
            "additionalProperties": {
                "type": "object"
            },
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "stats": {
                    "type": "object",
                    "properties": {
                        "dataRate": {
                            "type": "string"
                        },
                        "duration": {
                            "type": "number",
                            "format": "int32"
                        },
                        "fabricDataRate": {
                            "type": "string"
                        },
                        "totalBytes": {
                            "type": "number",
                            "format": "int32"
                        },
                        "matches": {
                            "type": "number",
                            "format": "int32"
                        },
                    }
                }
            }
        },
        "FilesResponse": {
            "type": "object",
            "properties": {
                "folders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dirPath": {
                    "type": "string"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "object"
            },
            "properties": {
                "message": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        }
    }
}

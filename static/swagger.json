{
  "swagger": "2.0",
  "info": {
    "description": "This is a REST API for the RyftOne Server and Cluster. It provides methods to list files and folders stored on server or cluster and execute search and count requests. Both RAW_TEXT and RECORD searches supported. Please explore API below for details and examples. For more details visit project page https://github.com/getryft/ryft-server",
    "title": "RyftOne REST API",
    "version": "1.2"
  },
  "paths": {
    "/search": {
      "get": {
        "description": "Endpoint for the search",
        "tags": [
          "search"
        ],
        "operationId": "search",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-go-name": "Files",
            "description": "Source files",
            "name": "files",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Format",
            "description": "Parameter for the structured search. Specify the input data format \"xml\" or \"raw\" (Default)",
            "name": "format",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-go-name": "CaseSensitive",
            "description": "Case sensitive flag",
            "name": "cs",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Fields",
            "description": "For structured search specify the list of required fields. If omitted all fields are used",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Query",
            "description": "Search query, for example: ( RAW_TEXT CONTAINS \"night\" )",
            "name": "query",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Data",
            "description": "Name of result data file to keep",
            "name": "data",
            "in": "data",
            "required": false
          },
          {
            "type": "string",
            "x-go-name": "Index",
            "description": "Name of result index file to keep",
            "name": "index",
            "in": "index",
            "required": false
          },
          {
            "type": "string",
            "x-go-name": "Mode",
            "description": "Search mode. Should be \"es\" for exact search, \"fhs\" for fuzzy hamming search, \"feds\" for fuzzy edit distance search, \"ds\", \"ts\", \"ns\" for date, time or numeric search",
            "name": "mode",
            "in": "query"
          },
          {
            "maximum": 65000,
            "minimum": 0,
            "type": "integer",
            "format": "uint16",
            "x-go-name": "Surrounding",
            "description": "Specifies the number of characters before the match and after the match that will be returned when the input specifier type is raw text",
            "name": "surrounding",
            "in": "query"
          },
          {
            "maximum": 255,
            "minimum": 0,
            "type": "integer",
            "format": "uint8",
            "x-go-name": "Fuzziness",
            "description": "Is the fuzziness of the search. Measured as the maximum Hamming distance.",
            "name": "fuzziness",
            "in": "query"
          },
          {
            "maximum": 4,
            "minimum": 0,
            "type": "integer",
            "format": "uint8",
            "x-go-name": "Nodes",
            "description": "Specifies 1-4 RCAB processing nodes to use. If omitted all nodes are used.",
            "name": "nodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-go-name": "Local",
            "description": "Perform search only on this cluster member. Default 'false'.",
            "name": "local",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-go-name": "Stats",
            "description": "Include search statistics in response. Default 'false'.",
            "name": "stats",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "SearchResponseOK is a search result in an array with an elements of various structure",
            "schema": {
              "description": "CountResponse returns matches for query",
              "type": "object",
              "$ref": "#/definitions/SearchResponse"
            }
          },
          "default": {
            "description": "Error responses",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/count": {
      "get": {
        "description": "Endpoint for the count",
        "tags": [
          "count"
        ],
        "summary": "Count",
        "operationId": "count",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Query",
            "description": "Search query, for example: ( RAW_TEXT CONTAINS \"night\" )",
            "name": "query",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Data",
            "description": "Name of result data file to keep",
            "name": "data",
            "in": "data",
            "required": false
          },
          {
            "type": "string",
            "x-go-name": "Index",
            "description": "Name of result index file to keep",
            "name": "index",
            "in": "index",
            "required": false
          },
          {
            "type": "string",
            "x-go-name": "Mode",
            "description": "Search mode. Should be \"es\" for exact search, \"fhs\" for fuzzy hamming search, \"feds\" for fuzzy edit distance search, \"ds\", \"ts\", \"ns\" for date, time or numeric search",
            "name": "mode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-go-name": "Files",
            "description": "Source files",
            "name": "files",
            "in": "query",
            "required": true
          },
          {
            "maximum": 65000,
            "minimum": 0,
            "type": "integer",
            "format": "uint16",
            "x-go-name": "Surrounding",
            "description": "Specifies the number of characters before the match and after the match that will be returned when the input specifier type is raw text",
            "name": "surrounding",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "uint8",
            "x-go-name": "Fuzziness",
            "description": "Is the fuzziness of the search. Measured as the maximum Hamming distance.",
            "name": "fuzziness",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-go-name": "CaseSensitive",
            "description": "Case sensitive flag",
            "name": "cs",
            "in": "query"
          },
          {
            "maximum": 4,
            "minimum": 0,
            "type": "integer",
            "format": "uint8",
            "x-go-name": "Nodes",
            "description": "Active Nodes Count",
            "name": "nodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-go-name": "Local",
            "description": "Perform search only on this cluster member. Default 'false'.",
            "name": "local",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "SearchResponseOK is a search result in an array with an elements of various structure",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CountResponse"
            }
          },
          "default": {
            "description": "Error responses",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Files",
        "description": "Endpoint to query mode/cluster file system structure",
        "operationId": "files",
        "parameters": [
          {
            "name": "dir",
            "type": "string",
            "description": "The folder path to return child items of. Default '/'",
            "in": "query"
          },
          {
            "name": "local",
            "type": "boolean",
            "description": "Return file structure from local node only or whole cluster",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of files and directories for node/cluster",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/FilesResponse"
            }
          },
          "default": {
            "description": "Error responses",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "summary": "Version",
        "description": "Endpoint to query current build version",
        "operationId": "version",
        "responses": {
          "200": {
            "description": "Hash and version",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/VersionResponse"
            }
          },
          "default": {
            "description": "Error responses",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CountResponse": {
      "type": "object",
      "required": [
        "matches"
      ],
      "properties": {
        "dataRate": {
          "type": "string"
        },
        "duration": {
          "type": "number",
          "format": "int32"
        },
        "fabricDataRate": {
          "type": "string"
        },
        "matches": {
          "type": "number",
          "format": "int32"
        },
        "totalBytes": {
          "type": "number",
          "format": "int32"
        }
      }
    },
    "SearchResponse": {
      "type": "object",
      "required": [
        "results"
      ],
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "stats": {
          "type": "object",
          "$ref": "#/definitions/CountResponse"
        }
      }
    },
    "FilesResponse": {
      "type": "object",
      "properties": {
        "folders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dir": {
          "type": "string"
        }
      }
    },
    "VersionResponse": {
      "type": "object",
      "properties": {
        "git-hash": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      },
      "properties": {
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    }
  }
}
